name: K8s

on: [push]

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    uses: ./.github/workflows/terraform.yml

  k8s:
    name: k8s
    runs-on: ubuntu-latest
    needs: [terraform]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::983169537692:role/Github-Role
        aws-region: us-east-1
        audience: sts.amazonaws.com

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.29.1'
      id: install-kubectl

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: 'v3.15.2'
      id: install-helm

    - name: Get Kubeconfig
      run: |
        aws eks update-kubeconfig --name "my-eks-cluster" --region us-east-1
        echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

    - name: Create Values File
      env:
        GRAFANA_PASSWORD: ${{ secrets.GRAFANA_PASSWORD }}
      run: |
        cat <<EOF > values-temp.yaml
        replicaCount: 1

        image:
          repository: 983169537692.dkr.ecr.us-east-1.amazonaws.com/pilar-challenge
          tag: ${{ github.sha }}
          pullPolicy: IfNotPresent
        
        grafana:
          adminPassword: $GRAFANA_PASSWORD
        EOF
    
    - name: Create Prometheus Values File
      run: |
        cat <<EOF > prometheus-values-temp.yaml
        prometheus:
          service:
            type: ClusterIP
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            alerting:
              alertmanagers: []
            ruleSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            probeSelectorNilUsesHelmValues: false
            enableAdminAPI: false
            serviceMonitorSelector: {}
            ruleSelector: {}
            podMonitorSelector: {}
            probeSelector: {}

        alertmanager:
          enabled: false

        kubeStateMetrics:
          enabled: false

        nodeExporter:
          enabled: false

        grafana:
          enabled: true
          adminPassword: $GRAFANA_PASSWORD
          service:
            type: LoadBalancer
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
          grafana.ini:
            security:
              admin_user: "admin"
              admin_password: $GRAFANA_PASSWORD
        EOF

    - name: Add Prometheus Helm Repo
      run: |
        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
        helm repo update

    - name: Deploy Prometheus with Helm
      run: |
        helm upgrade --install prometheus prometheus-community/kube-prometheus-stack --values prometheus-values-temp.yaml --namespace default --timeout 15m --atomic

    - name: Deploy Pilar Challenge with Helm
      run: |
        helm upgrade --install pilar-challenge ./chart --values values-temp.yaml --namespace default --timeout 15m --atomic

    - name: Get All Pods
      run: kubectl get pods --all-namespaces
